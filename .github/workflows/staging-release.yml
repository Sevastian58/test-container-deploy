name: Staging BE release

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [closed]

env:
  NODE_VERSION: '18.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: Sevastian58/test-container-deploy
  DATABASE_URL: ${{ vars.DATABASE_URL }}
  KEY_VAULT_NAME: 'test-vault-container'

jobs:
  build-image:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: staging

    permissions:
      contents: read
      packages: write

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

  build-publish-image:
    #if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: staging

    permissions:
      contents: read
      packages: write

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          
            - name: Azure CLI Login
            uses: azure/login@v1
            with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      # - name: 'Add or modify secrets in azure key vault'
      #   run: |
      #     az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "keyValue" --value "chauuuu"     
                
      # - name: 'Set environment variables in Azure App Service'
      #   run: |
      #     az webapp config appsettings set --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --settings \  
      #       keyValue=@Microsoft.KeyVault(SecretUri=https://${{ env.KEY_VAULT_NAME }}.vault.azure.net/secrets/keyValue)

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{steps.meta.outputs.tags}}

      - name: Run Flyway Migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          docker compose -f docker-compose.staging.yml up flyway
